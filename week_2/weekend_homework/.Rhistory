knitr::opts_chunk$set(echo = TRUE)
data <- dbGetQuery(db_connect, statement = "select *
FROM feedbacks
ORDER BY date DESC
LIMIT 1")
library(keyring)
library(RPostgreSQL)
keyring_unlock("local")
username <- key_get("postgresql_username", keyring = "local")
password <- key_get("postgresql_password", keyring = "local")
keyring_lock("local")
db_connect <- dbConnect(drv = PostgreSQL(), user = username, password = password, dbname = 'acme_employees', host = 'localhost')
data <- dbGetQuery(db_connect, statement = "SELECT * FROM employees")
data <- dbGetQuery(db_connect, statement = "SELECT id, first_name, last_name, CONCAT(first_name, ' ', last_name) AS full_name FROM employees")
data <- dbGetQuery(db_connect, statement = "SELECT id, first_name, last_name, CONCAT(first_name, ' ', last_name) AS full_name FROM employees")
knitr::opts_chunk$set(echo = TRUE)
library(keyring)
library(RPostgreSQL)
library(keyring)
library(RPostgreSQL)
keyring_unlock("local")
username <- key_get("postgresql_username", keyring = "local")
password <- key_get("postgresql_password", keyring = "local")
keyring_lock("local")
db_connect <- dbConnect(drv = PostgreSQL(), user = username, password = password, dbname = 'acme_employees', host = 'localhost')
data <- dbGetQuery(db_connect, statement = "SELECT * FROM employees")
data <- dbGetQuery(db_connect, statement = "select *
FROM feedbacks
ORDER BY date DESC
LIMIT 1")
View(data)
View(data)
data <- dbGetQuery(db_connect, statement = "select *
FROM feedbacks
JOIN employees as e ON e.id = f.id
ORDER BY date DESC
LIMIT 1")
data <- dbGetQuery(db_connect, statement = "select *
FROM feedbacks
JOIN employees as e ON e.id = f.employee_id
ORDER BY date DESC
LIMIT 1")
data <- dbGetQuery(db_connect, statement = "select *
FROM feedbacks
JOIN employees as e ON e.id = f.employee_id
ORDER BY date DESC
LIMIT 1")
data <- dbGetQuery(db_connect, statement = "select f.employee_id as feedbacks.id
FROM feedbacks
JOIN employees as e ON e.id = f.employee_id
ORDER BY date DESC
LIMIT 1")
data <- dbGetQuery(db_connect, statement = "select f.employee_id as feedbacks.id
FROM feedbacks
INNER JOIN employees as e ON e.id = f.employee_id
ORDER BY date DESC
LIMIT 1")
data <- dbGetQuery(db_connect, statement = "select f.employee_id as feedbacks_id
FROM feedbacks
INNER JOIN employees as e ON e.id = f.employee_id
ORDER BY date DESC
LIMIT 1")
data <- dbGetQuery(db_connect, statement = "select e.employee_id as f.employee_id
FROM feedbacks
INNER JOIN employees as e ON e.id = f.employee_id
ORDER BY date DESC
LIMIT 1")
data <- dbGetQuery(db_connect, statement = "select e.id as employee_id, f.id as feedback_id
FROM feedbacks
INNER JOIN employees as e ON e.id = f.employee_id
ORDER BY date DESC
LIMIT 1")
data <- dbGetQuery(db_connect, statement = "select e.id as employee_id, f.id as feedback_id
FROM feedbacks
INNER JOIN employees as e ON e.id = f.employee_id
ORDER BY date DESC
LIMIT 1")
data <- dbGetQuery(db_connect, statement = "select e.id as employee_id
FROM empoloyees
INNER JOIN feedbacks as f
ON employees.employee_id = f.employee_id
ORDER BY date DESC
LIMIT 1")
data <- dbGetQuery(db_connect, statement = "select employee_id
FROM empoloyees
INNER JOIN feedbacks as f
ON employees.employee_id = f.employee_id
ORDER BY date DESC
LIMIT 1")
data <- dbGetQuery(db_connect, statement = "select employee_id
FROM empoloyees
INNER JOIN feedbacks as f
ON employees.employee_id = f.employee_id
ORDER BY date DESC
LIMIT 1")
data <- dbGetQuery(db_connect, statement = "select e.id as employee_id
FROM employees
INNER JOIN feedbacks as f
ON employees.employee_id = f.employee_id
ORDER BY date DESC
LIMIT 1")
data <- dbGetQuery(db_connect, statement = "select f.message, f.date, e.first_name, e.last_name
from feedbacks f
join employees e ON f.employee_id=e.id
ORDER BY f.date DESC
LIMIT 1")
View(data)
data <- dbGetQuery(db_connect, statement = "select f.message as feedback, f.date as feedback_date, e.first_name, e.last_name
from feedbacks f
join employees e ON f.employee_id=e.id
ORDER BY f.date DESC
LIMIT 1")
data <- dbGetQuery(db_connect, statement = "select f.message as feedback, f.date as feedback_date, e.first_name, e.last_name
from feedbacks f
join employees e ON f.employee_id=e.id
ORDER BY f.date DESC
LIMIT 1")
View(data)
data <- dbGetQuery(db_connect, statement = "select t.name, count(e.id) as no_of_emp_with_single_init_f_name
FROM employees e
JOIN teams t ON e.team_id=t.id
WHERE e.first_name like '_'
GROUP BU e.team_id"
)
data <- dbGetQuery(db_connect, statement = "select t.name, count(e.id) as no_of_emp_with_single_init_f_name
FROM employees e
JOIN teams t ON e.team_id=t.id
WHERE e.first_name like '_'
GROUP BY e.team_id"
)
data <- dbGetQuery(db_connect, statement = "select t.name, count(e.id) as no_of_emp_with_single_init_f_name
FROM employees e
JOIN teams t ON e.team_id=t.id
WHERE e.first_name like '_'
GROUP BY t.id"
)
data <- dbGetQuery(db_connect, statement = "select t.name, count(e.id) as no_of_emp
FROM employees e
JOIN teams t ON e.team_id=t.id
WHERE e.first_name like '_'
GROUP BY t.id
ORDER BY no_of_emp DESC"
)
View(data)
data <- dbGetQuery(db_connect, statement = "select t.name as team_name, count(e.id) as num_employees
FROM employees as e
RIGHT JOIN teams AS t
ON e.team_id= t.id
GROUP BY t.name
ORDER BY num_employees DESC")
data <- dbGetQuery(db_connect, statement = "select f.message as feedback, f.date as feedback_date, e.first_name, e.last_name
from feedbacks f
join employees e ON f.employee_id=e.id
ORDER BY f.date DESC
LIMIT 1")
data <- dbGetQuery(db_connect, statement = "select t.name, count(e.id) as no_of_emp
FROM employees e
LEFT JOIN teams t ON e.team_id=t.id
WHERE e.first_name like '_'
GROUP BY t.id
ORDER BY no_of_emp DESC"
)
